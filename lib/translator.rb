module Translator
  def eng_to_braille
    {
      a: ['O', '.', "\n", '.', '.', "\n", '.', '.'],  b: ['O', '.', "\n", 'O', '.', "\n", '.', '.'],
      c: ['O', 'O', "\n", '.', '.', "\n", '.', '.'],  d: ['O', 'O', "\n", '.', 'O', "\n", '.', '.'],
      e: ['O', '.', "\n", '.', 'O', "\n", '.', '.'],  f: ['O', 'O', "\n", 'O', '.', "\n", '.', '.'],
      g: ['O', 'O', "\n", 'O', 'O', "\n", '.', '.'],  h: ['O', '.', "\n", 'O', 'O', "\n", '.', '.'],
      i: ['.', 'O', "\n", 'O', '.', "\n", '.', '.'],  j: ['.', 'O', "\n", 'O', 'O', "\n", '.', '.'],
      k: ['O', '.', "\n", '.', '.', "\n", 'O', '.'],  l: ['O', '.', "\n", 'O', '.', "\n", 'O', '.'],
      m: ['O', 'O', "\n", '.', '.', "\n", 'O', '.'],  n: ['O', 'O', "\n", '.', 'O', "\n", 'O', '.'],
      o: ['O', '.', "\n", '.', 'O', "\n", 'O', '.'],  p: ['O', 'O', "\n", 'O', '.', "\n", 'O', '.'],
      q: ['O', 'O', "\n", 'O', 'O', "\n", 'O', '.'],  r: ['O', '.', "\n", 'O', 'O', "\n", 'O', '.'],
      s: ['.', 'O', "\n", 'O', '.', "\n", 'O', '.'],  t: ['.', 'O', "\n", 'O', 'O', "\n", 'O', '.'],
      u: ['O', '.', "\n", '.', '.', "\n", 'O', 'O'],  v: ['O', '.', "\n", 'O', '.', "\n", 'O', 'O'],
      w: ['.', 'O', "\n", 'O', 'O', "\n", '.', 'O'],  x: ['O', 'O', "\n", '.', '.', "\n", 'O', 'O'],
      y: ['O', 'O', "\n", '.', 'O', "\n", 'O', 'O'],  z: ['O', '.', "\n", '.', 'O', "\n", 'O', 'O'],
    }
    # @braille_to_eng = @eng_to_braille.invert
  end

  def translate_english(string)
    string.split('').map{|character| eng_to_braille[character.to_sym]}
  end
end
